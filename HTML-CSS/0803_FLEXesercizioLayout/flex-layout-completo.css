main {
    display: flex;
}

main > div:first-child {
    flex-grow: 2;
    border-right: 1px solid gray;
}
/* flex-grow permette di sistemare i due più piccoli contenitori che si trovano l'uno accanto all'altro in modo tale che uno prenda i 2/3 e l'altro l'1/3 rimanenti (6+3=9); il border right crea la riga tra le due aree mentre padding e margin aiutano a distanziare gli elementi interni dal perimetro. Il > tra main e div aiuta a indicare il div direttamente figlio di main e non gli altri "nipoti".*/
main > div:last-child {
    flex-grow: 1;
}
main > div {
    padding: 2rem ;
}

header {
    display: flex;
    align-items: baseline;
    justify-content: space-between;
}
/* L'header è una flexbox grazie a display e vede "brand" e "menu" allineati sulla stessa baseline e il justify-content:space-between agisce sullo spazio tra loro per giustificarli uno tutto a destra e uno tutto a sinistra. */

.news-detail {
    border-top: 1px solid grey;
    border-right: 4px solid grey;
    border-bottom: 1px solid grey;
    border-left: 4px solid grey;
    margin-top: 2rem;
    padding: 1rem;
}

.images{
    display: flex;
    flex-wrap: wrap;
    gap: 1rem 2rem;
}
/* alle immagini è applicato il flex e grazie al flex-wrap vanno a capo automaticamente quando non possono più stare sulla stessa linea. Non inserendo il wrap, le immagini spingono tutto il contenuto alla loro sinistra rimpicciolendo anche il contenitore sinistro e rendendo così inutile la divisione imposta dal flex grow. Il gap tra le immagini permette di distanziarle senza l'utilizzo di margini ecc modificando solo lo spazio tra esse */
.images img {
    width: 140px;
}

.brand-details {
    display: flex;
}
/* applicato il flex, se non avessi modificato span e p, avrei potuto utilizzare align-items:stretch per adattare alla stessa altezza i contenitori di brand e description */
ol{
    list-style-type: none;
}

.brand , .description {
    display: flex;
    align-items: center;
    border: 1px solid grey;
    padding: 1em;
}
/* facendole diventare flex, posso usare align-items per centrare tutto il contenuto comprese le strisce senza dover levare il margine al paragrafo e dargli lo stesso padding per pareggiare i conti con lo span*/

.brand {
    font-weight: bold;
}